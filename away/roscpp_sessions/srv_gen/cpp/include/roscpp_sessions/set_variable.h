/* Auto-generated by genmsg_cpp for file /home/tribot/ros/opentribot/roscpp_sessions/srv/set_variable.srv */
#ifndef ROSCPP_SESSIONS_SERVICE_SET_VARIABLE_H
#define ROSCPP_SESSIONS_SERVICE_SET_VARIABLE_H
#include <string>
#include <vector>
#include <ostream>
#include "ros/serialization.h"
#include "ros/builtin_message_traits.h"
#include "ros/message_operations.h"
#include "ros/message.h"
#include "ros/time.h"

#include "ros/service_traits.h"




namespace roscpp_sessions
{
template <class ContainerAllocator>
struct set_variableRequest_ : public ros::Message
{
  typedef set_variableRequest_<ContainerAllocator> Type;

  set_variableRequest_()
  : variable()
  , value(0)
  {
  }

  set_variableRequest_(const ContainerAllocator& _alloc)
  : variable(_alloc)
  , value(0)
  {
  }

  typedef std::basic_string<char, std::char_traits<char>, typename ContainerAllocator::template rebind<char>::other >  _variable_type;
  std::basic_string<char, std::char_traits<char>, typename ContainerAllocator::template rebind<char>::other >  variable;

  typedef int32_t _value_type;
  int32_t value;


private:
  static const char* __s_getDataType_() { return "roscpp_sessions/set_variableRequest"; }
public:
  ROSCPP_DEPRECATED static const std::string __s_getDataType() { return __s_getDataType_(); }

  ROSCPP_DEPRECATED const std::string __getDataType() const { return __s_getDataType_(); }

private:
  static const char* __s_getMD5Sum_() { return "93d6cd2ef0527c532b42de2a1705eb38"; }
public:
  ROSCPP_DEPRECATED static const std::string __s_getMD5Sum() { return __s_getMD5Sum_(); }

  ROSCPP_DEPRECATED const std::string __getMD5Sum() const { return __s_getMD5Sum_(); }

private:
  static const char* __s_getServerMD5Sum_() { return "93d6cd2ef0527c532b42de2a1705eb38"; }
public:
  ROSCPP_DEPRECATED static const std::string __s_getServerMD5Sum() { return __s_getServerMD5Sum_(); }

  ROSCPP_DEPRECATED const std::string __getServerMD5Sum() const { return __s_getServerMD5Sum_(); }

private:
  static const char* __s_getMessageDefinition_() { return "string variable\n\
int32 value\n\
\n\
"; }
public:
  ROSCPP_DEPRECATED static const std::string __s_getMessageDefinition() { return __s_getMessageDefinition_(); }

  ROSCPP_DEPRECATED const std::string __getMessageDefinition() const { return __s_getMessageDefinition_(); }

  ROSCPP_DEPRECATED virtual uint8_t *serialize(uint8_t *write_ptr, uint32_t seq) const
  {
    ros::serialization::OStream stream(write_ptr, 1000000000);
    ros::serialization::serialize(stream, variable);
    ros::serialization::serialize(stream, value);
    return stream.getData();
  }

  ROSCPP_DEPRECATED virtual uint8_t *deserialize(uint8_t *read_ptr)
  {
    ros::serialization::IStream stream(read_ptr, 1000000000);
    ros::serialization::deserialize(stream, variable);
    ros::serialization::deserialize(stream, value);
    return stream.getData();
  }

  ROSCPP_DEPRECATED virtual uint32_t serializationLength() const
  {
    uint32_t size = 0;
    size += ros::serialization::serializationLength(variable);
    size += ros::serialization::serializationLength(value);
    return size;
  }

  typedef boost::shared_ptr< ::roscpp_sessions::set_variableRequest_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::roscpp_sessions::set_variableRequest_<ContainerAllocator>  const> ConstPtr;
}; // struct set_variableRequest
typedef  ::roscpp_sessions::set_variableRequest_<std::allocator<void> > set_variableRequest;

typedef boost::shared_ptr< ::roscpp_sessions::set_variableRequest> set_variableRequestPtr;
typedef boost::shared_ptr< ::roscpp_sessions::set_variableRequest const> set_variableRequestConstPtr;


template <class ContainerAllocator>
struct set_variableResponse_ : public ros::Message
{
  typedef set_variableResponse_<ContainerAllocator> Type;

  set_variableResponse_()
  {
  }

  set_variableResponse_(const ContainerAllocator& _alloc)
  {
  }


private:
  static const char* __s_getDataType_() { return "roscpp_sessions/set_variableResponse"; }
public:
  ROSCPP_DEPRECATED static const std::string __s_getDataType() { return __s_getDataType_(); }

  ROSCPP_DEPRECATED const std::string __getDataType() const { return __s_getDataType_(); }

private:
  static const char* __s_getMD5Sum_() { return "d41d8cd98f00b204e9800998ecf8427e"; }
public:
  ROSCPP_DEPRECATED static const std::string __s_getMD5Sum() { return __s_getMD5Sum_(); }

  ROSCPP_DEPRECATED const std::string __getMD5Sum() const { return __s_getMD5Sum_(); }

private:
  static const char* __s_getServerMD5Sum_() { return "93d6cd2ef0527c532b42de2a1705eb38"; }
public:
  ROSCPP_DEPRECATED static const std::string __s_getServerMD5Sum() { return __s_getServerMD5Sum_(); }

  ROSCPP_DEPRECATED const std::string __getServerMD5Sum() const { return __s_getServerMD5Sum_(); }

private:
  static const char* __s_getMessageDefinition_() { return "\n\
\n\
"; }
public:
  ROSCPP_DEPRECATED static const std::string __s_getMessageDefinition() { return __s_getMessageDefinition_(); }

  ROSCPP_DEPRECATED const std::string __getMessageDefinition() const { return __s_getMessageDefinition_(); }

  ROSCPP_DEPRECATED virtual uint8_t *serialize(uint8_t *write_ptr, uint32_t seq) const
  {
    ros::serialization::OStream stream(write_ptr, 1000000000);
    return stream.getData();
  }

  ROSCPP_DEPRECATED virtual uint8_t *deserialize(uint8_t *read_ptr)
  {
    ros::serialization::IStream stream(read_ptr, 1000000000);
    return stream.getData();
  }

  ROSCPP_DEPRECATED virtual uint32_t serializationLength() const
  {
    uint32_t size = 0;
    return size;
  }

  typedef boost::shared_ptr< ::roscpp_sessions::set_variableResponse_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::roscpp_sessions::set_variableResponse_<ContainerAllocator>  const> ConstPtr;
}; // struct set_variableResponse
typedef  ::roscpp_sessions::set_variableResponse_<std::allocator<void> > set_variableResponse;

typedef boost::shared_ptr< ::roscpp_sessions::set_variableResponse> set_variableResponsePtr;
typedef boost::shared_ptr< ::roscpp_sessions::set_variableResponse const> set_variableResponseConstPtr;

struct set_variable
{

typedef set_variableRequest Request;
typedef set_variableResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;
}; // struct set_variable
} // namespace roscpp_sessions

namespace ros
{
namespace message_traits
{
template<class ContainerAllocator>
struct MD5Sum< ::roscpp_sessions::set_variableRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "93d6cd2ef0527c532b42de2a1705eb38";
  }

  static const char* value(const  ::roscpp_sessions::set_variableRequest_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0x93d6cd2ef0527c53ULL;
  static const uint64_t static_value2 = 0x2b42de2a1705eb38ULL;
};

template<class ContainerAllocator>
struct DataType< ::roscpp_sessions::set_variableRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "roscpp_sessions/set_variableRequest";
  }

  static const char* value(const  ::roscpp_sessions::set_variableRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::roscpp_sessions::set_variableRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "string variable\n\
int32 value\n\
\n\
";
  }

  static const char* value(const  ::roscpp_sessions::set_variableRequest_<ContainerAllocator> &) { return value(); } 
};

} // namespace message_traits
} // namespace ros


namespace ros
{
namespace message_traits
{
template<class ContainerAllocator>
struct MD5Sum< ::roscpp_sessions::set_variableResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "d41d8cd98f00b204e9800998ecf8427e";
  }

  static const char* value(const  ::roscpp_sessions::set_variableResponse_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0xd41d8cd98f00b204ULL;
  static const uint64_t static_value2 = 0xe9800998ecf8427eULL;
};

template<class ContainerAllocator>
struct DataType< ::roscpp_sessions::set_variableResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "roscpp_sessions/set_variableResponse";
  }

  static const char* value(const  ::roscpp_sessions::set_variableResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::roscpp_sessions::set_variableResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "\n\
\n\
";
  }

  static const char* value(const  ::roscpp_sessions::set_variableResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator> struct IsFixedSize< ::roscpp_sessions::set_variableResponse_<ContainerAllocator> > : public TrueType {};
} // namespace message_traits
} // namespace ros

namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::roscpp_sessions::set_variableRequest_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.variable);
    stream.next(m.value);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct set_variableRequest_
} // namespace serialization
} // namespace ros


namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::roscpp_sessions::set_variableResponse_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct set_variableResponse_
} // namespace serialization
} // namespace ros

namespace ros
{
namespace service_traits
{
template<>
struct MD5Sum<roscpp_sessions::set_variable> {
  static const char* value() 
  {
    return "93d6cd2ef0527c532b42de2a1705eb38";
  }

  static const char* value(const roscpp_sessions::set_variable&) { return value(); } 
};

template<>
struct DataType<roscpp_sessions::set_variable> {
  static const char* value() 
  {
    return "roscpp_sessions/set_variable";
  }

  static const char* value(const roscpp_sessions::set_variable&) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<roscpp_sessions::set_variableRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "93d6cd2ef0527c532b42de2a1705eb38";
  }

  static const char* value(const roscpp_sessions::set_variableRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<roscpp_sessions::set_variableRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "roscpp_sessions/set_variable";
  }

  static const char* value(const roscpp_sessions::set_variableRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<roscpp_sessions::set_variableResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "93d6cd2ef0527c532b42de2a1705eb38";
  }

  static const char* value(const roscpp_sessions::set_variableResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<roscpp_sessions::set_variableResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "roscpp_sessions/set_variable";
  }

  static const char* value(const roscpp_sessions::set_variableResponse_<ContainerAllocator> &) { return value(); } 
};

} // namespace service_traits
} // namespace ros

#endif // ROSCPP_SESSIONS_SERVICE_SET_VARIABLE_H

