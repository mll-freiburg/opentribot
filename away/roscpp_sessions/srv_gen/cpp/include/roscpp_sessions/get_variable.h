/* Auto-generated by genmsg_cpp for file /home/tribot/ros/opentribot/roscpp_sessions/srv/get_variable.srv */
#ifndef ROSCPP_SESSIONS_SERVICE_GET_VARIABLE_H
#define ROSCPP_SESSIONS_SERVICE_GET_VARIABLE_H
#include <string>
#include <vector>
#include <ostream>
#include "ros/serialization.h"
#include "ros/builtin_message_traits.h"
#include "ros/message_operations.h"
#include "ros/message.h"
#include "ros/time.h"

#include "ros/service_traits.h"




namespace roscpp_sessions
{
template <class ContainerAllocator>
struct get_variableRequest_ : public ros::Message
{
  typedef get_variableRequest_<ContainerAllocator> Type;

  get_variableRequest_()
  : variable()
  {
  }

  get_variableRequest_(const ContainerAllocator& _alloc)
  : variable(_alloc)
  {
  }

  typedef std::basic_string<char, std::char_traits<char>, typename ContainerAllocator::template rebind<char>::other >  _variable_type;
  std::basic_string<char, std::char_traits<char>, typename ContainerAllocator::template rebind<char>::other >  variable;


private:
  static const char* __s_getDataType_() { return "roscpp_sessions/get_variableRequest"; }
public:
  ROSCPP_DEPRECATED static const std::string __s_getDataType() { return __s_getDataType_(); }

  ROSCPP_DEPRECATED const std::string __getDataType() const { return __s_getDataType_(); }

private:
  static const char* __s_getMD5Sum_() { return "f0025523f25a3be72b81a4752d8b3914"; }
public:
  ROSCPP_DEPRECATED static const std::string __s_getMD5Sum() { return __s_getMD5Sum_(); }

  ROSCPP_DEPRECATED const std::string __getMD5Sum() const { return __s_getMD5Sum_(); }

private:
  static const char* __s_getServerMD5Sum_() { return "e366705baa8c302f52752de97161f798"; }
public:
  ROSCPP_DEPRECATED static const std::string __s_getServerMD5Sum() { return __s_getServerMD5Sum_(); }

  ROSCPP_DEPRECATED const std::string __getServerMD5Sum() const { return __s_getServerMD5Sum_(); }

private:
  static const char* __s_getMessageDefinition_() { return "string variable\n\
\n\
"; }
public:
  ROSCPP_DEPRECATED static const std::string __s_getMessageDefinition() { return __s_getMessageDefinition_(); }

  ROSCPP_DEPRECATED const std::string __getMessageDefinition() const { return __s_getMessageDefinition_(); }

  ROSCPP_DEPRECATED virtual uint8_t *serialize(uint8_t *write_ptr, uint32_t seq) const
  {
    ros::serialization::OStream stream(write_ptr, 1000000000);
    ros::serialization::serialize(stream, variable);
    return stream.getData();
  }

  ROSCPP_DEPRECATED virtual uint8_t *deserialize(uint8_t *read_ptr)
  {
    ros::serialization::IStream stream(read_ptr, 1000000000);
    ros::serialization::deserialize(stream, variable);
    return stream.getData();
  }

  ROSCPP_DEPRECATED virtual uint32_t serializationLength() const
  {
    uint32_t size = 0;
    size += ros::serialization::serializationLength(variable);
    return size;
  }

  typedef boost::shared_ptr< ::roscpp_sessions::get_variableRequest_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::roscpp_sessions::get_variableRequest_<ContainerAllocator>  const> ConstPtr;
}; // struct get_variableRequest
typedef  ::roscpp_sessions::get_variableRequest_<std::allocator<void> > get_variableRequest;

typedef boost::shared_ptr< ::roscpp_sessions::get_variableRequest> get_variableRequestPtr;
typedef boost::shared_ptr< ::roscpp_sessions::get_variableRequest const> get_variableRequestConstPtr;


template <class ContainerAllocator>
struct get_variableResponse_ : public ros::Message
{
  typedef get_variableResponse_<ContainerAllocator> Type;

  get_variableResponse_()
  : result(0)
  {
  }

  get_variableResponse_(const ContainerAllocator& _alloc)
  : result(0)
  {
  }

  typedef int32_t _result_type;
  int32_t result;


private:
  static const char* __s_getDataType_() { return "roscpp_sessions/get_variableResponse"; }
public:
  ROSCPP_DEPRECATED static const std::string __s_getDataType() { return __s_getDataType_(); }

  ROSCPP_DEPRECATED const std::string __getDataType() const { return __s_getDataType_(); }

private:
  static const char* __s_getMD5Sum_() { return "034a8e20d6a306665e3a5b340fab3f09"; }
public:
  ROSCPP_DEPRECATED static const std::string __s_getMD5Sum() { return __s_getMD5Sum_(); }

  ROSCPP_DEPRECATED const std::string __getMD5Sum() const { return __s_getMD5Sum_(); }

private:
  static const char* __s_getServerMD5Sum_() { return "e366705baa8c302f52752de97161f798"; }
public:
  ROSCPP_DEPRECATED static const std::string __s_getServerMD5Sum() { return __s_getServerMD5Sum_(); }

  ROSCPP_DEPRECATED const std::string __getServerMD5Sum() const { return __s_getServerMD5Sum_(); }

private:
  static const char* __s_getMessageDefinition_() { return "int32 result\n\
\n\
"; }
public:
  ROSCPP_DEPRECATED static const std::string __s_getMessageDefinition() { return __s_getMessageDefinition_(); }

  ROSCPP_DEPRECATED const std::string __getMessageDefinition() const { return __s_getMessageDefinition_(); }

  ROSCPP_DEPRECATED virtual uint8_t *serialize(uint8_t *write_ptr, uint32_t seq) const
  {
    ros::serialization::OStream stream(write_ptr, 1000000000);
    ros::serialization::serialize(stream, result);
    return stream.getData();
  }

  ROSCPP_DEPRECATED virtual uint8_t *deserialize(uint8_t *read_ptr)
  {
    ros::serialization::IStream stream(read_ptr, 1000000000);
    ros::serialization::deserialize(stream, result);
    return stream.getData();
  }

  ROSCPP_DEPRECATED virtual uint32_t serializationLength() const
  {
    uint32_t size = 0;
    size += ros::serialization::serializationLength(result);
    return size;
  }

  typedef boost::shared_ptr< ::roscpp_sessions::get_variableResponse_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::roscpp_sessions::get_variableResponse_<ContainerAllocator>  const> ConstPtr;
}; // struct get_variableResponse
typedef  ::roscpp_sessions::get_variableResponse_<std::allocator<void> > get_variableResponse;

typedef boost::shared_ptr< ::roscpp_sessions::get_variableResponse> get_variableResponsePtr;
typedef boost::shared_ptr< ::roscpp_sessions::get_variableResponse const> get_variableResponseConstPtr;

struct get_variable
{

typedef get_variableRequest Request;
typedef get_variableResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;
}; // struct get_variable
} // namespace roscpp_sessions

namespace ros
{
namespace message_traits
{
template<class ContainerAllocator>
struct MD5Sum< ::roscpp_sessions::get_variableRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "f0025523f25a3be72b81a4752d8b3914";
  }

  static const char* value(const  ::roscpp_sessions::get_variableRequest_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0xf0025523f25a3be7ULL;
  static const uint64_t static_value2 = 0x2b81a4752d8b3914ULL;
};

template<class ContainerAllocator>
struct DataType< ::roscpp_sessions::get_variableRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "roscpp_sessions/get_variableRequest";
  }

  static const char* value(const  ::roscpp_sessions::get_variableRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::roscpp_sessions::get_variableRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "string variable\n\
\n\
";
  }

  static const char* value(const  ::roscpp_sessions::get_variableRequest_<ContainerAllocator> &) { return value(); } 
};

} // namespace message_traits
} // namespace ros


namespace ros
{
namespace message_traits
{
template<class ContainerAllocator>
struct MD5Sum< ::roscpp_sessions::get_variableResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "034a8e20d6a306665e3a5b340fab3f09";
  }

  static const char* value(const  ::roscpp_sessions::get_variableResponse_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0x034a8e20d6a30666ULL;
  static const uint64_t static_value2 = 0x5e3a5b340fab3f09ULL;
};

template<class ContainerAllocator>
struct DataType< ::roscpp_sessions::get_variableResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "roscpp_sessions/get_variableResponse";
  }

  static const char* value(const  ::roscpp_sessions::get_variableResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::roscpp_sessions::get_variableResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "int32 result\n\
\n\
";
  }

  static const char* value(const  ::roscpp_sessions::get_variableResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator> struct IsFixedSize< ::roscpp_sessions::get_variableResponse_<ContainerAllocator> > : public TrueType {};
} // namespace message_traits
} // namespace ros

namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::roscpp_sessions::get_variableRequest_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.variable);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct get_variableRequest_
} // namespace serialization
} // namespace ros


namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::roscpp_sessions::get_variableResponse_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.result);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct get_variableResponse_
} // namespace serialization
} // namespace ros

namespace ros
{
namespace service_traits
{
template<>
struct MD5Sum<roscpp_sessions::get_variable> {
  static const char* value() 
  {
    return "e366705baa8c302f52752de97161f798";
  }

  static const char* value(const roscpp_sessions::get_variable&) { return value(); } 
};

template<>
struct DataType<roscpp_sessions::get_variable> {
  static const char* value() 
  {
    return "roscpp_sessions/get_variable";
  }

  static const char* value(const roscpp_sessions::get_variable&) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<roscpp_sessions::get_variableRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "e366705baa8c302f52752de97161f798";
  }

  static const char* value(const roscpp_sessions::get_variableRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<roscpp_sessions::get_variableRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "roscpp_sessions/get_variable";
  }

  static const char* value(const roscpp_sessions::get_variableRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<roscpp_sessions::get_variableResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "e366705baa8c302f52752de97161f798";
  }

  static const char* value(const roscpp_sessions::get_variableResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<roscpp_sessions::get_variableResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "roscpp_sessions/get_variable";
  }

  static const char* value(const roscpp_sessions::get_variableResponse_<ContainerAllocator> &) { return value(); } 
};

} // namespace service_traits
} // namespace ros

#endif // ROSCPP_SESSIONS_SERVICE_GET_VARIABLE_H

