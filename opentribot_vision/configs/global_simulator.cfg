#############################################
# Grundkonfiguration der Software           #
# hier: Simulatoranbindung                  #
# geeignet zum Testen des Spielerverhaltens #
#############################################


[]

### User Interface parameters:
add_com_user_interface          = true
communication_port              = 59361
communication_stop_if_no_socket = false
user_interface_type             = TerminalUserInterface
manual_start_waiting_time       = 10
user_interface_update_frequency = 1

### General parameters:
own_half                         = yellow
loop_time                        = 30
random_seed                      = 8746
report_computation_time          = true      # mittlere Rechenzeit ins Journal schreiben
report_computation_time_detailed = false     # Rechenzeit jede Iteration mitloggen
auto_start_robot                 = true      # Roboter bei Programmstart sofort aktivieren

check_cpu_clock = 0
simulator_host = localhost      # Rechner, auf dem der Simulator laeuft

### Robotertyp auswaehlen:
robot_type = Simulator

### Spielertyp auswaehlen (Dummy, JoystickPlayer, Goalie, Feldspieler):
#player_type             = Dummy
#player_type             = TutorialPlayer
#player_type             = Feldspieler
player_type             = Feldspieler07
add_joystick_player     = true

### Weltmodelltyp auswaehlen:
#world_model_type         = ErrorMinimiser
world_model_type         = Simulator
add_write_world_model    = true
#write_world_model_info  = wminfo

### Bildverarbeitungstyp auswaehlen:
#vision_type              = Simulator
vision_type              = Dummy
vision_section           = nix


[Journal]

output = journal.out
verbosity = 3
flush = robotcontrol.log


[SimulatorVision]

noise_level              = 0      # Standardabweichung fuer Verrauschen der Positionen
line_mis_probability     = 0      # Wahrscheinlichkeit fuer nicht gesehenes Linienstueck
goal_mis_probability     = 0.0    # Wahrscheinlichkeit fuer nicht gesehenes Tor
ball_mis_probability     = 0.0    # Wahrscheinlichkeit fuer nicht gesehenen Ball
obstacle_mis_probability = 0.0    # Wahrscheinlichkeit fuer nicht gesehenes Hindernis
line_vision_radius       = 3500   # Abstand (in mm), bis zu dem Linien wahrgenommen werden
ball_vision_radius       = 6000   # Abstand (in mm), bis zu dem der Ball wahrgenommen werden
obstacle_vision_radius   = 5000   # Abstand (in mm), bis zu dem Hindernisse wahrgenommen werden
num_scanlines            = 30     # Anzahl zweiseitiger Scanlinien

simulate_gyroscope = false
simulate_odometry = true

log_true_position = true


### Konfigfiles fuer einzelne Komponenten einbinden:
+ world_model.cfg
+ player.cfg
+ rcplayer.cfg
